// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static int K_REG;

    /** Initializes the keyboard. */
    function void init() {
        let K_REG = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(K_REG);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {

        var char curChar;
        var char printThis;

        let curChar = Keyboard.keyPressed();

        do Output.printChar(0);

        while(curChar = 0){
            let curChar = Keyboard.keyPressed();
        }

        let printThis = curChar;

        while(curChar = printThis){
            let curChar = Keyboard.keyPressed();
        }

        if(printThis = 129){
            do Output.backSpace();
            return printThis;
        }

        if(printThis > 129){
            return printThis;
        }
        do Output.backSpace();
        do Output.printChar(printThis);

        return printThis;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {

        var String s;
        var char c;
        var int i;

        do Output.printString(message);
        let s = String.new(80);
        let i = 0;
        let c = Keyboard.readChar();


        while (~(c = String.newLine())){

            if(c = String.backSpace()){
                if(i > 0){
                    do s.eraseLastChar();
                    do Output.backSpace();
                    let i = i - 1;
                }
            }
            else{
                do s.appendChar(c);
                let i = i + 1;
            }

            let c = Keyboard.readChar();
        }

        return s;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {

        var String input;
        let input = Keyboard.readLine(message);

        return String.intValue(input);
    }
}
