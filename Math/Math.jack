class Math{
		
		static Array twoToThe;

		function void init(){
			let twoToThe = Array.new(16);
			let twoToThe[0] = 1;
			let twoToThe[1] = 2;
			let twoToThe[2] = 4;
			let twoToThe[3] = 8;
			let twoToThe[4] = 16;
			let twoToThe[5] = 32;
			let twoToThe[6] = 64;
			let twoToThe[7] = 128;
			let twoToThe[8] = 256;
			let twoToThe[9] = 512;
			let twoToThe[10] = 1024;
			let twoToThe[11] = 2048;
			let twoToThe[12] = 4096;
			let twoToThe[13] = 8192;
			let twoToThe[14] = 16384;
			let twoToThe[15] = 16384 +16384; //test Overflow

			return;
		}

		function int abs(int x){
		/** Returns the abs of x */
			
			if(x<0){
				return -x;
			}

			return x;
		}

		function int multiply(int x, int y){
		/** Multiply x and y */
			
			var int sum;
			var int i;
			var int shiftedX;

			let sum = 0;
			let i = 0;
			let shiftedX = x;

			while(i<16){

				if(~((y & twoToThe[i])=0)){
					let sum = sum + shiftedX;
				}

				let shiftedX = shiftedX + shiftedX;
				let i = i + 1;
			}
			return sum;
		}

		function int divideHelper(int x,int y){
		/** Returns the result of x>=0 divided by y>=0 */

				var int temp;
				var int q;


				if((y > x)|(y < 0)){
					return 0;
				}

				if(y>16383){  // Takes care of overflows.
					return 1;
				}

				let q = Math.divide(x, (y+y));
				let temp = q + q;

				if((x - (temp * y)) < y){
					return temp;
				}

				else{
					return (temp + 1); 
				}


		}
		function int divide(int x, int y){
		/** Returns the result of x divided by y */

				var int sign;

				let sign = 1;

				if(y = 0){
					do Sys.error(3);
				}

				if(x < 0){
					let sign = -sign;
					let x = -x;
				}

				if(y < 0){
					let sign = -sign;
					let y = -y;
				}

				if(sign = 1){
					return Math.divideHelper(x,y);
				}

				return -Math.divideHelper(x,y);
		}

		function int min(int x, int y){
		/** Retruns the minimum of x and y */
			
			if(x>y){
				return y;
			}
			
			return x;
		}

		function int max(int x, int y){
		/** Returns the maximum of x and y */
			
			if(x>y){
				return x;
			}

			return y;
		}


		function int sqrt(int x){
		/** Finds a square root of a number */

			var int y;
			var int j;
			var int temp;

			let y = 0;
			let j = 7;

			if(x<0){
				do Sys.error(0);
			}

			while(j>(-1)){

				let temp = (y+twoToThe[j]) * (y+twoToThe[j]);

				if(((temp -1)< x) & (temp > 0)){ 
					let y = y + twoToThe[j];
				}
				let j = j-1;
			}
			return y;
		}
}